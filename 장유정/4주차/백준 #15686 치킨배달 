import java.util.*;

public class Main {
    static int N;
    static int M;
    static ArrayList<int[]> chickenJip = new ArrayList<>();
    static ArrayList<int[]> houses = new ArrayList<>();
    static ArrayList<int[]> choice = new ArrayList<>();
    static int MIN = Integer.MAX_VALUE;


    public static void main(String[] args) throws IOException {
        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer line = new StringTokenizer(bf.readLine(), " ");

        N = Integer.parseInt(line.nextToken());
        M = Integer.parseInt(line.nextToken());

        for( int i = 0; i < N; i++ ){
            line = new StringTokenizer(bf.readLine(), " ");
            for( int j = 0; j < N; j++ ){
                int n = Integer.parseInt(line.nextToken());
                if( n == 2 ) chickenJip.add(new int[]{i,j});
                if( n == 1 ) houses.add(new int[]{i,j});
            }
        }

        pickChickenJip( 0, 0 );

        System.out.println(MIN);

    }// end of main

    public static void pickChickenJip(int count, int start ){
        if( count == M ){
            getChickenDistance();
            return;
        }

        for( int i = start; i < chickenJip.size(); i++ ){
            int[] now = chickenJip.get(i);
            //[1] 선택하기
            choice.add(now);

            //[2] 백트래킹
            pickChickenJip(count + 1, i + 1 );

            //[3] 선택취소
            choice.remove(now);
        }
    }

    public static void getChickenDistance(){
        int totalDistance = 0;

        for( int[] home : houses){
            int chickenDistance = Integer.MAX_VALUE;

            for( int[] chicken : choice ){
                int distance = Math.abs(home[0]-chicken[0]) + Math.abs(home[1]-chicken[1]);
                if( distance < chickenDistance ) chickenDistance = distance;
            }
            totalDistance += chickenDistance;
        }
        if( MIN > totalDistance ) MIN = totalDistance;

    }


}// end of class
